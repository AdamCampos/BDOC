{
  "COMMON": {
    "SEARCH": "Search",
    "ENABLED": "Enabled",
    "ENABLE": "Enable",
    "DISABLED": "Disabled",
    "DISABLE": "Disable",
    "SECRET": "Secret",
    "SECRET_SET": "Secret is set",
    "SECRET_NOT_SET": "Secret is not set",
    "LAST_MODIFIED_BY": "Last modified {{date}} by {{username}}",
    "GENERATE": "Generate",
    "PASSWORD_INFO": "Password Complexity",
    "PASSWORD": "Password",
    "PASSWORD_SET": "Password is set",
    "PASSWORD_NOT_SET": "Password is not set",
    "REMOVE_ENTITY": "Remove {{name}}?",
    "DISABLE_ENTITY": "Disable {{name}}?",
    "ENABLE_ENTITY": "Enable {{name}}?",
    "CANCEL": "Cancel",
    "REMOVE": "Remove",
    "OK": "Ok",
    "SIGN_OUT": "Sign Out",
    "UPDATE_SECRET": "Update Secret",
    "UPDATE_PASSWORD": "Update Password",
    "SUCCESSFULLY_REMOVED": "{{name}} successfully removed.",
    "SUCCESSFULLY_UPDATED": "{{name}} successfully updated.",
    "STRING": "String",
    "ENUMERATION": "Enumeration",
    "IS_REQUIRED": "{{name}} is required.",
    "NO_IDENTITIES": "No external identities",
    "SELECT_USER": "Select a user",
    "SELECT_GROUP": "Select a group",
    "SELECT_SERVICE": "Select a Smart API",
    "SELECT_IDENTITY_PROVIDER": "Select an identity provider",
    "NO_GROUPS_FOUND": "No groups found",
    "PROVIDE_VALUE": "Provide a value",
    "GROUP": "Group",
    "USER": "User",
    "UNSUPPORTED_FORMAT_TITLE": "Unsupported format",
    "UNSUPPORTED_FORMAT_CONTENT": "Upload is only supported for the following types: ",
    "RESET": "Reset",
    "FILTERS": {
      "CLEAR_FILTERS": "Clear Filters",
      "SET": "Set",
      "NOT_SET": "Not set",
      "BY_PRODUCT_TYPE": "By Product Type",
      "PRODUCT_TYPE": "Product Type",
      "BY_STATUS": "By Status",
      "STATUS": "Status",
      "BY_AUTHENTICATION_FLOW": "By Authorization Flow",
      "AUTHENTICATION_FLOW": "Authorization Flow",
      "BY_SECRET_STATUS": "By Secret Status",
      "SECRET_STATUS": "Secret Status",
      "BY_GROUP": "By Group",
      "GROUP": "Group",
      "BY_PASSWORD_STATUS": "By Password Status",
      "PASSWORD_STATUS": "Password Status"
    },
    "GRID": {
      "ID": "Id",
      "LAST_MODIFIED": "Last Modified",
      "MODIFIED_BY": "Modified By",
      "CREATED_ON": "Created On",
      "CREATED_BY": "Created By",
      "GROUP_NAME": "Group",
      "REQUIRED": "Required",
      "NAME": "Name",
      "VALUE": "Value",
      "CLAIM_TYPE": "Type",
      "UNIQUE": "Unique",
      "PRODUCT_NAME": "Product",
      "SERVICE_ADDRESS": "Smart API URL",
      "AUTHENTICATION_FLOW": "Authorization Flow",
      "IS_SECRET_SET": "Secret",
      "USER_NAME": "User Name",
      "EMAIL": "Email",
      "IS_PASSWORD_SET": "Password Set",
      "PROVIDER_NAME": "Provider",
      "NUM_USER_GROUPS": "Users in Group",
      "NUM_SERVICE_GROUPS": "Accessible Services",
      "TYPE": "Type",
      "KEY": "Key",
      "FROM_NAME": "Provider Claim",
      "TO_NAME": "Value maps to...",
      "DEFAULT_VALUE": "Default Value",
      "CLAIMS": "Claims",
      "SETTINGS": "Settings",
      "SELECTED": "Selected",
      "EDIT": "Edit",
      "REMOVE": "Remove",
      "ADD": "Add",
      "MAPPED_FROM_CLAIM": "Identity Provider Claim",
      "NOT_APPLICABLE": "Not Applicable",
      "IDENTIFIER": "Client ID", 
      "DESCRIPTION": "Description", 
      "REPLACE_WITH_EXPRESSION": "Regular Expression",
      "REPLACE_WITH_VALUE": "Replace With"
    },
    "TOOLTIPS": {
      "EDIT": "Edit",
      "REMOVE": "Remove",
      "UPDATE": "Update",
      "SAVE_CHANGES": "Save",
      "DISCARD_CHANGES": "Discard",
      "ADD": "Add",
      "REFRESH": "Refresh",
      "OPEN_NEW_WINDOW": "Open in New Window",
      "COPY_TO_CLIPBOARD": "Copy To Clipboard",
      "CANCEL": "Cancel",
      "DOCUMENTATION": "View in Smart API Explorer",
      "NO_DOCUMENTATION": "Documentation Unavailable",
      "VIEW": "View"
    },
    "CONTEXT": {
      "OVERVIEW": "Overview",
      "STATUS": "Status",
      "ACTIVITY": "Activity",
      "RECENT_ACTIVITY_DESCRIPTION": "Analytics snapshot for the last 30 days",
      "CHANGES_IMMEDIATE": "Changes in this section are persisted immediately.",
      "NAME": "Name",
      "SECRET_SET": "Secret is set",
      "SECRET_NOT_SET": "Secret is not set",
      "SECRETS_LOWERCASE_RULE": "At least 1 lowercase character.",
      "SECRETS_UPPERCASE_RULE": "At least 1 uppercase character.",
      "SECRETS_NUMBER_RULE": "At least 1 number.",
      "SECRETS_CHARACTER_RULE": "At least 1 special character.",
      "SECRETS_LENGTH_RULE": "Between 8 and 64 characters.",
      "SECRET_COMPLEXITY_REQUIREMENT": "Secrets must consist of at least one uppercase character, one lowercase character, one number, one of the following special characters: &!@#$%*=. , and must be between 8 and 64 characters in length.",
      "SECRET_UPDATE_SUCCESS": "The secret for {{name}} has been updated.",
      "SECRET_UPDATE_ERROR": "There was an error updating the secret for {{name}}.",
      "PASSWORD_UPDATE_SUCCESS": "The password for {{name}} has been updated.",
      "PASSWORD_UPDATE_ERROR": "There was an error updating the password for {{name}}.",
      "PASSWORD_COMPLEXITY_REQUIREMENT": "Passwords must consist of at least one uppercase character, one lowercase character, one number, one of the following special characters: &!@#$%*=. , and must be between 8 and 64 characters in length.",
      "EXTERNAL_IDENTITY_SUCCESS": "External identity {{identity}} configured for {{name}}.",
      "EXTERNAL_IDENTITY_ERROR": "There was a problem configuring the external identity.",
      "EXTERNAL_IDENTITY_PROVIDER_HINT": "Select the identity provider",
      "EXTERNAL_IDENTITY_PROVIDER_NAME_HINT": "Provide the external identity to map",
      "EXTERNAL_IDENTITY_PROVIDER_PLACEHOLDER": "Identity Provider",
      "NUM_USERS": "{{num}} users",
      "NUM_IDENTITIES": "{{num}} external identities"
    },
    "ACTIVITY": {
      "DATA_COUNT": "Data transferred in the last 30 days",
      "TRANSACTION_COUNT": "Transactions in the last 30 days",
      "ERROR_COUNT": "Errors in the last 30 days",
      "VIEW_IN_ANALYTICS": "View in Analytics",
      "NO_ACTIVITY": "No activity in the last thirty days",
      "TRANSACTIONS": "Transactions",
      "ERRORS": "Errors",
      "RESPONSE_SIZE": "Data Transferred"
    },
    "WIZARD": {
      "BACK_BUTTON": "Back",
      "NEXT_BUTTON": "Next",
      "FINISH_BUTTON": "Finish",
      "CANCEL_BUTTON": "Cancel"
    },
    "ERRORS": {
      "SERVER_ERROR": "Server Error",
      "ERROR": "Error",
      "GENERIC_FAULT": "A problem occurred, please check the logs for more information.",
      "SECRET_REQUIRED": "You must provide a secret.",
      "SECRET_INVALID": "You must provide a valid secret.",
      "SECRET_MINLENGTH": "Secret must be a minimum of 8 characters.",
      "SECRET_MAXLENGTH": "Secret must be a maximum of 64 characters,",
      "SECRET_COMPLEXITY": "Secret does not meet the complexity requirements.",
      "PASSWORD_REQUIRED": "You must provide a password.",
      "PASSWORD_INVALID": "You must provide a valid password.",
      "PASSWORD_MINLENGTH": "Password must be a minimum of 8 characters.",
      "PASSWORD_MAXLENGTH": "Password must be a maximum of 64 characters,",
      "PASSWORD_COMPLEXITY": "Password does not meet the complexity requirements."
    }
  },
  "NAVIGATION": {
    "APIS": "Smart APIs",
    "CLIENTS": "Smart Clients",
    "USERS": "Users",
    "GROUPS": "Groups",
    "ACTIVE_SESSIONS": "Active Sessions",
    "SETTINGS": "Settings",
    "ODATA_BROWSER": "Smart API Explorer",
    "API_DOCUMENTATION": "Dev Docs",
    "LOGOUT": "Log out",
    "IDENTITY_PROVIDERS": "Identity Providers",
    "HELP": "Help",
    "ABOUT": "About"
  },
  "APIS": {
    "SERVICE_NAME": "Name",
    "PRODUCT_NAME": "Product",
    "VERSION": "Version",
    "SERVICE_URI": "URL",
    "SECRET": "Secret",
    "ADD_SMART_API": "New Smart API",
    "SMART_API_ID": "Resource Identifier",
    "CLIENT_SELECT_LABEL": "Viewing Activity for",
    "SECRET_CHANGE_DESCRIPTION": "Update the secret for this Smart API. Secrets cannot be retrieved once saved.",
    "UPDATE_SECRET_USER_MESSAGE": "Update the secret for the",
    "AVAILABLE": "Available",
    "UNAVAILABLE": "Unavailable",
    "CONNECTIVITY": "Connectivity",
    "ENABLE_SERVICE": "Enable Smart Api",
    "SECRET_SET": "Secret is set",
    "SECRET_NOT_SET": "Secret is not set",
    "REMOVE_SERVICE": "Remove Smart API",
    "REMOVE_CONFIRMATION": "If you remove this Smart API, users and clients will no longer be able to access it.",
    "UPDATE_SERVICE_REGISTRATION": "Update Smart API Registration",
    "ADD_CLAIM_TYPE": "Add claim type",
    "ADD_GROUP": "Add group",
    "NO_CLAIMS": "No supported claim types",
    "NO_GROUPS": "No authorized groups",
    "NO_CLAIMS_SEARCH": "No claims found",
    "NO_GROUPS_SEARCH": "No groups found",
    "NO_VALUES": "No values",
    "DISPLAY_NAME": "Display Name",
    "CLAIM_DESCRIPTION": "Description",
    "REGISTER_API": "Register a Smart API",
    "ALL_CLIENTS": "All Clients",
    "CONTEXT": {
      "SERVICE_NAME": "The name of the Smart API",
      "SERVICE_URI": "The web address of the Smart API",
      "SERVICE_URI_HINT": "Provide the web address of the Smart API service description",
      "SERVICE_DOCUMENT_HINT": "Provide the Smart API service description document (JSON)",
      "STATUS": "Allow the Smart API to respond to requests",
      "SERVICE_ID": "Use this when requesting a token",
      "PRODUCT": "The product and version of the Smart API",
      "PRODUCT_NAME": "The product supporting this Smart API",
      "VERSION": "The product version",
      "SECRET": "Used to ensure communication between the Smart API and Smart API Manager is secured",
      "VIEW_GROUPS": "Authorized Groups",
      "VIEW_GROUPS_DESCRIPTION": "View authorized groups and their claims for this Smart API.",
      "VIEW_CLAIM_TYPES": "Supported Claim Types",
      "VIEW_CLAIM_TYPES_DESCRIPTION": "View the claims this Smart API supports.",
      "EDIT_GROUPS": "Manage Authorized Groups",
      "EDIT_GROUPS_DESCRIPTION": "Ensure groups have access and claims for this Smart API",
      "EDIT_CLAIM_TYPES": "Manage Supported Claim Types",
      "EDIT_CLAIM_TYPES_DESCRIPTION": "Ensure the proper claims are included in access tokens for this Smart API",
      "REMOVE_GROUP": "Users in {{name}} will no longer have access to {{api}}.",
      "REMOVE_CLAIM_TYPE": "Removing this claim type could impact access to this Smart API. It may also require changes to the Smart API configuration."
    },
    "ERRORS": {
      "API_NAME_REQUIRED": "You must provide a name for this Smart API.",
      "PRODUCT_VERSION_REQUIRED": "You must provide a version for the Smart API Product.",
      "URI_REQUIRED": "You must provide a valid URL for the service.",
      "URI_INVALID": "The provided URL is not valid.",
      "URI_PATTERN_INVALID": "The provided URL contains invalid characters. Some examples include hostnames containing symbols or using an invalid TLD.",
      "URI_COLLISION": "A Smart API is already registered with this URL.",
      "NAME_COLLISION": "A Smart API is already registered with this name.",
      "SERVICE_NOT_UNIQUE": "The provided Smart API Name and URL is already registered or otherwise invalid.",
      "JSON_REQUIRED": "You must provide a valid service document.",
      "JSON_INVALID": "You must provide a valid JSON document. Ensure the JSON is valid and does not contain any illegal characters.",
      "SERVICE_DOCUMENT_INVALID": "You must provide a valid service document. Ensure the service document is correct and contains all required properties.",
      "CLAIM_TYPE_REQUIRED": "You must provide a claim type.",
      "CLAIM_NAME_REQUIRED": "You must provide a name for this claim type.",
      "CLAIM_NAME_PATTERN": "Claim names can only consist of alphanumeric characters, underscores ( _ ), and periods ( . ).",
      "CLAIM_NAME_DUPLICATE": "A claim with this name already exists.",
      "SERVICE_UPDATE_ID_MISMATCH_CONTENT": "The deployed Smart API has a resource identifier that does not match the local registration. Please ensure that the remote Smart API is configured correctly.",
      "SERVICE_UPDATE_ID_MISMATCH_TITLE": "Resource Identifier Mismatch",
      "SERVICE_UPDATE_NOT_FOUND_CONTENT": "The deployed Smart API has a resource identifier that cannot be found. Please ensure that the remote Smart API is configured correctly.",
      "SERVICE_UPDATE_NOT_FOUND_TITLE": "Smart API Not Found"
    },
    "WIZARDS": {
      "ADD_CLAIM_TYPE": "Add a Supported Claim Type",
      "EDIT_CLAIM_TYPE": "Edit a Supported Claim Type",
      "REQUIRED": "Required",
      "CLAIM_REQUIRED_CONTEXT": "The claim must be provided to the Smart API",
      "UNIQUE": "Unique",
      "CLAIM_TYPE": "Type",
      "CLAIM_UNIQUE_CONTEXT": "Tokens must contain only one of these claims",
      "CLAIM_TYPE_CONTEXT": "Select the type of claim",
      "CLAIM_NAME_CONTEXT": "Provide the claim name as presented in the token",
      "CLAIM_DISPLAY_NAME_CONTEXT": "Provide an optional user friendly claim name",
      "CLAIM_DESCRIPTION_CONTEXT": "Provide an optional description",
      "ADD_AUTHORIZED_GROUP": "Add an Authorized Group",
      "EDIT_AUTHORIZED_GROUP": "Edit an Authorized Group",
      "ENABLE_AUTHORIZED_GROUP": "Enable Authorized Group",
      "ENABLE_AUTHORIZED_GROUP_CONTEXT": "Authorize members of {{group}} to make calls to {{api}}?",
      "DISABLE_AUTHORIZED_GROUP": "Prevent members of {{name}} making calls to this Smart API?",
      "EDIT_GROUP_CLAIMS": "Claims are passed to the Smart API whenever a member of the group uses the Smart API. You can manage the claims and their values here. Be sure you provide values for all of the claims.",
      "EDIT_GROUP_CLAIMS_CONTEXT": "Claims can also be mapped from Identity Provider claims. You can map an Identity Provider claim value by providing both a value to be used as a default, and the Identity Provider claim name.",
      "SECRET_UPDATE_SUCCESS_CONTEXT": "Ensure that the web.config for this Smart API is also updated to reflect the new secret.",
      "ADD_GROUP_SUCCESS": "{{group}} authorized to access {{api}}.",
      "ADD_GROUP_ERROR": "There was an error adding the group.",
      "EDIT_GROUP_SUCCESS": "Updated claims and status for {{group}}.",
      "EDIT_GROUP_ERROR": "There was an error editing the group.",
      "ADD_CLAIM_TYPE_SUCCESS": "Claim type {{name}} was added.",
      "ADD_CLAIM_TYPE_ERROR": "A problem occurred adding the claim type.",
      "EDIT_CLAIM_TYPE_SUCCESS": "Claim type {{name}} was updated.",
      "EDIT_CLAIM_TYPE_ERROR": "A problem occurred updating the claim type.",
      "ADD_ENUM_VALUES_CONTEXT": "Provide values for the claim type."
    },
    "REGISTRATION": {
      "SUCCESS": "Your Smart API is now registered.",
      "SUCCESS_CONTEXT": "Be sure to update your web.config values.",
      "ERROR": "There was an error registering your Smart API.",
      "METHOD_CONTEXT": "There are two ways to register your Smart API:",
      "URL_METHOD_LABEL": "Specify the URL for the Smart API service description",
      "URL_METHOD_CONTEXT": "For example - https://www.contoso.com/SPM/v1/description",
      "JSON_METHOD_LABEL": "Specify the JSON content for the Smart API service description",
      "JSON_METHOD_CONTEXT": "If your Smart API is currently unreachable, you can provide the entire service description document.",
      "SECRET_CONTEXT": "Enter a secret for your Smart API. This secret secures communication between your Smart API and Smart API Manager.",
      "URL_INPUT_LABEL": "Smart API Description URL",
      "JSON_INPUT_LABEL": "Description Document (JSON)",
      "DESCRIPTION_NOT_FOUND": "The Smart API Description could not be retrieved. Ensure the description document URL is correct and attempt to register again.",
      "CLIENT_ERROR": "There was a problem communicating with your Smart API. Please check the Smart API Manager logs and attempt to register again.",
      "SERVER_ERROR": "The Smart API responded in a way which was not expected. Please check the Smart API logs and attempt to register again.",
      "CONFLICT": "A Smart API with this name and URL is already registered.",
      "CORS": "Unable to retrieve the Smart API metadata. This could be due to CORS or some other issue. Please ensure the Smart API is operating as expected and try again.",
      "REGISTRATION_OUTDATED": "This Smart API's registration is out of date",
      "UPDATE_NOW": "Update",
      "UPDATE_LATER": "Maybe later",
      "UPDATE_MENU_ITEM": "Update Smart API Registration",
      "UPDATE_DIALOG_TITLE": "Update Smart API Registration", 
      "UPDATE_CONFIRM": "Update",
      "UPDATE_WARNING": "Updating the Smart API Registration may override customization of Supported Claim Types. Are you sure you want to update?"
    },
    "DIAGNOSTICS": {
      "RESOURCE_ID_TITLE": "Resource Identifier Validation",
      "RESOURCE_ID_SUBTITLE": "Compare resource identifier for this API to the token audience in the service description document",
      "CLAIM_TYPES_TITLE": "Supported Claim Types Validation",
      "CLAIM_TYPES_SUBTITLE": "Compare supported claim types for this API to the supported claim types in the service description document",
      "ISSUER_SUCCESS": "The resource id for this API matches the token audience in the service description document.",
      "ISSUER_MATCH_ISSUE": "The resource id for this API does not match the token audience in the service description document.",
      "ISSUER_MATCH_RESOLUTION": "Verify the resource id has been updated in the web.config.",
      "ISSUER_FETCH_ISSUE": "Unable to retrieve the service description document. May indicate Cross-Origin-Resource-Sharing (CORS) configuration, Mixed-Content, or other problems. ",
      "ISSUER_FETCH_RESOLUTION": "Navigate directly to the service description document to validate API availability.",
      "CLAIMS_SUCCESS": "The claims for this API match the claims in the service description document.",
      "CLAIMS_ERROR_ISSUE": "The claims for this API do not match the claims in the service description document.",
      "CLAIMS_ERROR_RESOLUTION": "Review and update the claims for this API.", 
      "CONNECTION_TITLE": "Secure Communication Validation",
      "CONNECTION_SUBTITLE": "Ensure the Smart API server is configured for secure communication.",
      "CONNECTION_RESOLUTION": "Ensure the Smart API is running on a server configured with a valid SSL/TLS certificate.", 
      "CONNECTION_FAILED": "Validation failed. Please check the Smart API Manager logs for more information.",
      "CONNECTION_SUCCESS": "Validation succeeded. The Smart API server is configured for secure communication.", 
      "CONNECTION_NOTE": "Validation executes via the Smart API Manager Management API. If the Management API does not have a network route to the Smart API, validation will fail (even if the Smart API is running as expected). Always check the Smart API directly to ensure proper functionality."
    }
  },
  "CLIENTS": {
    "CLIENT_NAME": "Name",
    "AUTH_FLOW": "Authorization Flow",
    "IMPERSONATING_USER": "Impersonating User",
    "ADD_SMART_CLIENT": "New Smart Client",
    "SMART_CLIENT_ID": "Client ID",
    "REDIRECT_URIS": "Redirect URI",
    "NO_REDIRECT_URIS": "No redirect URIs",
    "SECRET_CHANGE_DESCRIPTION": "Update the secret for this Smart Client. Secrets cannot be retrieved once saved.",
    "REMOVE_CONFIRMATION": "If you remove this Smart Client, it will no longer be able to retrieve access tokens on behalf of a user or communicate with Smart APIs.",
    "ENABLE_CLIENT": "Enable Smart Client",
    "ADD_REDIRECT_URI": "Add redirect URI",
    "NO_USER_SEARCH": "No user found.",
    "USER_NOT_ASSIGNED": "User is not assigned",
    "REGISTER_CLIENT": "Register a Smart Client",
    "ACCESS_TOKEN_LIFETIME": "Access Token Lifetime",
    "AUTH_CODE_LIFETIME": "Auth Code Lifetime",
    "CONTEXT": {
      "ADD_REDIRECT_URI": "Add Redirect URI",
      "CLIENT_NAME": "The name of the Smart Client",
      "CLIENT_NAME_HINT": "Provide a name for the client",
      "SMART_CLIENT_ID": "Unique identifier for this client",
      "STATUS": "Allow the Smart Client to request access tokens",
      "SECRET": "Secret",
      "SECRET_DESCRIPTION": "Used to identify the client for certain flows",
      "AUTH_FLOW": "How the client requests tokens",
      "AUTH_FLOW_HINT": "Select an authorization flow",
      "IMPERSONATING_USER": "The client credentials flow impersonates this user",
      "CLIENT_CREDENTIALS_USER_REQUIRED": "When using the client credentials flow, you must select a user that the client will impersonate.",
      "VIEW_POST_LOGIN_REDIRECTS": "Post-Login Redirect URIs",
      "VIEW_POST_LOGIN_REDIRECTS_DESCRIPTION": "URIs that can be used to direct a user after login",
      "VIEW_POST_LOGOUT_REDIRECTS": "Post-Logout Redirect URIs",
      "VIEW_POST_LOGOUT_REDIRECTS_DESCRIPTION": "URIs that can be used to direct a user after logout",
      "EDIT_POST_LOGIN_REDIRECTS": "Manage Post-Login Redirect URIs",
      "EDIT_POST_LOGOUT_REDIRECTS": "Manage Post-Logout Redirect URIs",
      "POST_LOGIN_REDIRECT_INFO": "Post-login redirect URIs are used to direct a user after a successful login.",
      "POST_LOGOUT_REDIRECT_INFO": "Post-logout redirect URIs are used to direct a user after a successful logout.",
      "EDIT_REDIRECT_URI": "Edit Redirect URI",
      "REMOVE_REDIRECT_URI_LOGON": "Users of this Smart Client will no longer be able to authenticate when accessing the client from {{name}}.",
      "REMOVE_REDIRECT_URI_LOGOFF": "Users of this Smart Client will no longer be redirected back to {{name}} on logout.",
      "REDIRECT_URI_HINT": "Provide a valid URI for the client",
      "ACCESS_TOKEN_LIFETIME": "Access Token Lifetime",
      "ACCESS_TOKEN_LIFETIME_DESCRIPTION": "The lifetime (in seconds) of access tokens obtained by this application",
      "AUTH_CODE_LIFETIME": "Auth Code Lifetime",
      "AUTH_CODE_LIFETIME_DESCRIPTION": "The lifetime (in seconds) of auth codes obtained by this application"
    },
    "REGISTRATION": {
      "SUCCESS": "Your Smart Client is now registered.",
      "ERROR": "There was an error.",
      "CLIENT_NAME_CONTEXT": "Please provide a name for your Smart Client. Descriptive names are best.",
      "CLIENT_IDENTIFIER_CONTEXT": "Adding a client requires a unique client ID. If you do not provide an ID, one is automatically generated.",
      "IDENTIFIER_COMPLEXITY_REQUIREMENT":"Client IDs have a max length of 64 characters, but can consist of any alphanumeric or special characters.",
      "CLIENT_SECRET_REQUIRED_CONTEXT": "This flow requires a secret. The client secret is similar to a password and should be protected like a password.",
      "CLIENT_SECRET_CONTEXT": "We generated a secret for you below, but feel free to change it. ",
      "CLIENT_SECRET_WARN": "Once set, the client secret cannot be retrieved. Be sure to copy and save your secret before you continue.",
      "CLIENT_FLOW_CONTEXT": "Select an authorization flow for your Smart Client.",
      "CLIENT_FLOW_CONTEXT_TWO": "Not sure what to pick? Some things to keep in mind:",
      "CLIENT_FLOW_TIP_ONE": "Authorization Code With Proof Key flow is preferred for web and mobile clients.",
      "CLIENT_FLOW_TIP_TWO": "Authorization Code flow is perfect for server-based clients.",
      "CLIENT_FLOW_TIP_THREE": "We support all standard OAuth 2.0 and OpenID Connect flows.",
      "OAUTH_AND_OPENID": "Still not sure? The {oauth} and {openid} specifications are good resources."
    },
    "ERRORS": {
      "CLIENT_NAME_REQUIRED": "You must provide a name for this client.",
      "CLIENT_ID_REQUIRED": "You must provide a client ID.",
      "CLIENT_ID_CONFLICT": "A client with this ID is already registered.",
      "CLIENT_CREDENTIALS_USER_REQUIRED": "You must provide an impersonating user when using Client Credentials.",
      "AUTH_FLOW_REQUIRED": "You must provide an Authorization Flow for this client.",
      "CLIENT_SECRET_REQUIRED": "You must provide a secret for this client.",
      "CLIENT_IMPERSONATING_USER_REQUIRED": "You must provide an impersonating user when using the client credentials flow type.",
      "URI_REQUIRED": "You must provide a valid URI.",
      "URI_INVALID": "The provided URI is not valid.",
      "URI_EXISTS": "The provided URI is already registered.",
      "CLIENT_NAME_CONFLICT": "A client with this name is already registered."
    },
    "WIZARDS": {
      "REDIRECT_URI_SUCCESS": "Redirect URI updated.",
      "REDIRECT_URI_ERROR": "A problem occurred while updating the redirect URI."
    }
  },
  "USERS": {
    "ADD_USER": "New User",
    "USER_ID": "Username",
    "PASSWORD_CHANGE_DESCRIPTION": "Update the password for this user. Passwords cannot be retrieved once saved.",
    "EMAIL_ADDRESS": "Email Address",
    "FIRST_NAME": "First Name",
    "LAST_NAME": "Last Name",
    "PASSWORD": "Password",
    "PASSWORD_CONFIRM": "Confirm Password",
    "REGISTER_USER": "Register a User",
    "PASSWORD_SET": "Password is set",
    "PASSWORD_NOT_SET": "Password is not set",
    "REGISTER_USER_INFO_CONTEXT": "Please provide information about the user.",
    "REGISTER_USER_CREDS_CONTEXT": "Please provide a username and password for the user.",
    "REGISTER_SUCCESS": "Your user is now registered.",
    "REGISTER_ERROR": "There was an error during user registration. Please try again.",
    "ENABLE_USER": "Enable User",
    "ADD_USER_TO_GROUP": "Add group",
    "ADD_IDENTITY": "Add external identity",
    "NO_GROUP_MEMBERSHIP": "No group membership",
    "REMOVE_CONFIRMATION": "If you remove this user, they will no longer be able to retrieve access tokens or communicate with Smart APIs.",
    "CONTEXT": {
      "FIRST_NAME": "The first name, or given name, of the user",
      "LAST_NAME": "The last name, or surname, of the user",
      "EMAIL_ADDRESS": "The email address of the user",
      "USER_ID_DESCRIPTION": "Unique identifier for this user.",
      "PASSWORD_DESCRIPTION": "Used to authenticate the user",
      "VIEW_USER_IDENTITIES": "External Identities",
      "VIEW_USER_IDENTITIES_DESCRIPTION": " ",
      "VIEW_USER_GROUPS": "Group Membership",
      "VIEW_USER_GROUPS_DESCRIPTION": " ",
      "EDIT_USER_IDENTITIES": "Manage External Identities",
      "EDIT_USER_IDENTITIES_DESCRIPTION": "Manage the external identities for this user",
      "EDIT_USER_GROUPS": "Manage Group Membership",
      "EDIT_USER_GROUPS_DESCRIPTION": "Manage the groups this user belongs to",
      "STATUS": "Allow this user to authenticate and call Smart APIs",
      "REMOVE_FROM_GROUP": "Remove from {{name}}?",
      "REMOVE_USER_FROM_GROUP": "{{username}} will be removed from {{name}}."
    },
    "ERRORS": {
      "PASSWORD_REQUIRED": "You must provide a password.",
      "PASSWORD_INVALID": "You must provide a valid password.",
      "PASSWORD_MIN_LENGTH": "Passwords must be a minimum of 8 characters.",
      "PASSWORD_MAX_LENGTH": "Passwords must be no longer than 50 characters.",
      "PASSWORD_COMPLEXITY": "Password does not meet the complexity requirements.",
      "PASSWORD_MATCH": "Passwords do not match.",
      "USERNAME_REQUIRED": "You must provide a username.",
      "USERNAME_INVALID": "You must provide a valid username.",
      "USERNAME_MIN_LENGTH": "Usernames must be a minimum of 5 characters.",
      "USERNAME_MAX_LENGTH": "Usernames must be no longer than 64 characters.",
      "USERNAME_PATTERN": "Usernames must be a valid email address or a single word that contains only letters, numbers, spaces, dashes, or underscores with optional domain separator (\\).",
      "USERNAME_CONFLICT": "A user with this name already exists.",
      "EMAIL_ADDRESS_REQUIRED": "You must provide an email for this user.",
      "EMAIL_ADDRESS_PATTERN": "Please provide a valid email address.",
      "FIRST_NAME_REQUIRED": "You must provide a first name for this user.",
      "LAST_NAME_REQUIRED": "You must provide a last name or surname for this user.",
      "IDENTITY_NAME_REQUIRED": "You must provide an external identity.",
      "IDENTITY_PROVIDER_REQUIRED": "You must select an identity provider."
    },
    "WIZARDS": {
      "ADD_GROUP": "Add {{name}} to a Group",
      "ADD_GROUP_DESCRIPTION": "The user will be given access to the Smart APIs for which the group is authorized.",
      "NUM_SMART_APIS": "{{num}} Smart APIs",
      "REMOVE_IDENTITY": "{{username}} will no longer be able to authenticate using this external identity.",
      "ADD_IDENTITY": "Add External Identity",
      "EDIT_IDENTITY": "Edit External Identity",
      "ADD_IDENTITY_DESCRIPTION": "Provide the external identity which should be mapped to this user.",
      "FIRST_NAME_CONTEXT": "Provide the first name, or given name, of the user",
      "LAST_NAME_CONTEXT": "Provide the last name, or surname, of the user",
      "EMAIL_CONTEXT": "Provide an email address for the user",
      "USERNAME_CONTEXT": "Provide a unique identifier for the user"
    }
  },
  "GROUPS": {
    "ADD_GROUP": "New Group",
    "GROUP_NAME": "Name",
    "GROUP_ID": "Group ID",
    "REGISTER_GROUP": "Register a Group",
    "REGISTER_GROUP_CONTEXT": "To register a new group, you must provide a name.",
    "REGISTER_GROUP_CREATED": "Your group is now registered.",
    "REGISTER_GROUP_ERROR": "There was an error during group registration. Please try again.",
    "GROUP_ID_DESCRIPTION": "This value is provided in ID tokens and access tokens for a user in this group.",
    "NO_SERVICES": "No Smart APIs",
    "ENABLE_GROUP": "Enable Group",
    "NO_USERS": "No users",
    "ADD_USER_TO_GROUP": "Add user",
    "NO_USERS_SEARCH": "No users found",
    "ADD_SERVICE": "Add Smart API",
    "NO_SERVICES_SEARCH": "No Smart APIs found",
    "REMOVE_CONFIRMATION": "If you remove this group, users (and external identities) belonging to the group will no longer be able to retrieve access tokens or communicate with Smart APIs.",
    "CONTEXT": {
      "STATUS": "Allow users in this group access to Smart APIs",
      "GROUP_ID": "Unique identifier for this group",
      "GROUP_NAME": "The name of the group",
      "GROUP_NAME_HINT": "Provide a name for the group",
      "VIEW_API_ACCESS": "Smart API Access",
      "VIEW_API_ACCESS_DESCRIPTION": " View Smart APIs this group can access and the claims the group will provide to them.",
      "VIEW_GROUP_IDENTITIES": "Identities",
      "VIEW_GROUP_IDENTITIES_DESCRIPTION": "View external identities which are mapped to this group.",
      "VIEW_USER_GROUPS": "Users",
      "VIEW_USER_GROUPS_DESCRIPTION": "View local users who are members of this group.",
      "EDIT_API_ACCESS": "Manage Smart API Access",
      "EDIT_API_ACCESS_DESCRIPTION": "Manage the groups access to Smart APIs",
      "EDIT_GROUP_IDENTITIES": "Manage External Identities",
      "EDIT_GROUP_IDENTITIES_DESCRIPTION": "Manage the external identities for this group",
      "EDIT_USER_GROUPS": "Manage Users",
      "EDIT_USER_GROUPS_DESCRIPTION": "Manage the users in this group",
      "REMOVE_USER_FROM_GROUP": "{{name}} will be removed from {{groupname}}.",
      "REMOVE_SMART_API": "Users in {{group}} will no longer have access to {{name}}."
    },
    "ERRORS": {
      "GROUP_NAME_REQUIRED": "You must provide a name for this group.",
      "GROUP_NAME_CONFLICT": "A group with this name is already registered.",
      "IDENTITY_NAME_REQUIRED": "You must provide an external identity",
      "IDENTITY_PROVIDER_REQUIRED": "You must select an identity provider"
    },
    "WIZARDS": {
      "REMOVE_IDENTITY": "Members of {{groupname}} will no longer be able to authenticate using this external identity.",
      "ADD_IDENTITY_DESCRIPTION": "Provide the external identity which should be mapped to this group.",
      "ADD_USER": "Add a User to {{group}}",
      "ADD_USER_DESCRIPTION": "Description here",
      "NUM_GROUPS": "{{num}} Groups",
      "ADD_SMART_API_ACCESS": "Add Smart API Access",
      "EDIT_SMART_API_ACCESS": "Edit Smart API Access",
      "ENABLE_SERVICE_GROUP": "Enable Authorized Group",
      "ENABLE_SERVICE_GROUP_CONTEXT": "Authorize members of {{group}} to access {{api}}?",
      "ADD_SERVICE_SUCCESS": "{{group}} authorized to access {{api}}.",
      "ADD_SERVICE_ERROR": "There was an error adding group to service",
      "EDIT_SERVICE_SUCCESS": "Updated claims and status for {{api}}.",
      "EDIT_SERVICE_ERROR": "There was an updating authorized group.",
      "ADD_USER_SUCCESS": "{{user}} added to {{group}}.",
      "ADD_USER_ERROR": "A problem occurred adding {{user}} to {{group}}."
    }
  },
  "PROVIDERS": {
    "PROVIDER_NAME": "Provider Name",
    "PROVIDER_TYPE": "Type",
    "ENABLE_PROVIDER": "Enable Identity Provider",
    "ADD_PROVIDER": "Add an Identity Provider",
    "WS_FEDERATION": "WS Federation",
    "OPENID_CONNECT": "OpenID Connect",
    "SAML_2": "SAML 2.0",
    "LOCAL": "Local",
    "UNDEFINED": "Undefined",
    "METADATA": "Metadata URL or document",
    "SIGNING_KEYS": "Provide sigining keys",
    "REGISTER_SUCCESS": "Your provider is now registered.",
    "REGISTER_ERROR": "There was an error during provider registration. Please try again.",
    "REMOVE_CONFIRMATION": "Are you sure you want to remove this identity provider? Users will not be able to authenticate with this provider.",
    "WS_FEDERATION_SETTINGS": "WS Federation Settings",
    "OPENID_SETTINGS": "OpenID Connect Settings",
    "LOCAL_SETTINGS": "Local Settings",
    "CONTEXT": {
      "PROVIDER_NAME": "The name of the Identity Provider",
      "PROVIDER_TYPE": "The type of the Identity Provider",
      "STATUS": "Allow user to authenticate using this Identity Provider",
      "CLAIMS": "Manage Claims",
      "CLAIMS_DESCRIPTION": "Ensure that claims from the external provider are mapped or provided within a token",
      "TYPE_NAME": "The type",
      "INIT_STRING": "The init string",
      "METADATA_ADDRESS": "The metadata address",
      "REALM": "The realm",
      "ISSUER": "The Issuer",
      "TOKEN_ENDPOINT": "The token endpoint",
      "WS_FEDERATION": "WS-Federation based provider such as Integrated Windows Authentication, Azure AD, or CA SiteMinder",
      "OPENID_CONNECT": "OpenID Connect based provider such as Salesforce, Google, or Azure AD",
      "SAML_2": "SAML 2.0 based provider such as Azure AD",
      "LOCAL": "Local provider like Windows Credentials",
      "PROVIDER_NAME_HINT": "Provide a name for the provider",
      "METADATA_URL_OR_DOCUMENT_HINT": "Provide the metadata, either by URL or by copy and pasting the metadata.",
      "RESPONSE_TYPE": "The response type",
      "SCOPE": "The scope",
      "CLIENT_ID": "The client id",
      "CLIENT_SECRET": "The client secret",
      "RESOURCE": "The resource identifier",
      "AUTHORIZATION_ENDPOINT": "The authorization endpoint",
      "END_SESSION_ENDPOINT": "The endsession endpoint",
      "USER_INFO_ENDPOINT": "The user info endpoint",
      "SIGNING_KEYS": "The signing keys"
    },
    "WIZARDS": {
      "ADD_IDENTITY_PROVIDER": "Add an Identity Provider",
      "EDIT_IDENTITY_PROVIDER": "Edit an Identity Provider",
      "ADD_IDENTITY_PROVIDER_SUCCESS": "{{name}} added to the available providers.",
      "ADD_IDENTITY_PROVIDER_ERROR": "A problem occurred creating the identity provider.",
      "EDIT_IDENTITY_PROVIDER_SUCCESS": "Updated settings and claims for {{name}}.",
      "EDIT_IDENTITY_PROVIDER_ERROR": "A problem occurred editing the identity provider.",
      "PROVIDER_NAME_CONTEXT": "",
      "PROVIDER_TYPE_CONTEXT": "Smart API Manager supports several types of external identity providers. Select a type below for the provider.",
      "PROVIDER_SETTINGS_CONTEXT": "Update the settings for your provider. We've added some settings based on the provider type, but the actual settings required may depend on your implementation.",
      "PROVIDER_CLAIMS_CONTEXT": "Update the claims for your provider. Claims can be mapped to access token claims by providing a target claim value found in tokens issued by the Smart API Manager.",
      "REMOVE_PROVIDER": "Users will no longer be able to authenticate using {{name}}.",
      "ENABLE_IDENTITY_PROVIDER": "Enable identity provider",
      "ENABLE_IDENTITY_PROVIDER_CONTEXT": "Allow users to authenticate using {{name}}?",
      "CONFIG_TYPE_CONTEXT": "How will the provider be configured?",
      "AUTOMATIC_CONFIG": "Automatic",
      "MANUAL_CONFIG": "Manual",
      "AUTOMATIC_CONFIG_CONTEXT": "Provide either a URL to or Copy & Paste the metadata document.",
      "MANUAL_CONFIG_CONTEXT": "Manually enter settings for this identity provider.",
      "WSFED_CONFIG_CONTEXT": "WSFed Auto Context",
      "OPENID_CONFIG_CONTEXT": "OpenID Auto Context"
    },
    "SETTINGS": {
      "TYPE_NAME": "Implementation Type",
      "INIT_STRING": "Initialization String",
      "METADATA_ADDRESS": "Metadata Address",
      "REALM": "Realm",
      "ISSUER": "Issuer",
      "TOKEN_ENDPOINT": "Token Endpoint",
      "RESPONSE_TYPE": "Response Type",
      "SCOPE": "Scope",
      "CLIENT_ID": "Client Id",
      "CLIENT_SECRET": "Client Secret",
      "RESOURCE": "Resource",
      "AUTHORIZATION_ENDPOINT": "Authorization Endpoint",
      "END_SESSION_ENDPOINT": "End Session Endpoint",
      "USER_INFO_ENDPOINT": "User Info Endpoint",
      "SIGNING_KEYS": "Signing Keys"
    },
    "ERRORS": {
      "PROVIDER_NAME_REQUIRED": "You must provide a name for the provider.",
      "TYPE_NAME_REQUIRED": "You must provide an implementation type for this Identity Provider.",
      "METADATA_REQUIRED": "You must provide the metadata document.",
      "SIGNING_KEYS_REQUIRED": "You must provide the signing keys for this identity provider.",
      "WTREALM_REQUIRED": "You must provide the realm for this identity provider."
    }
  },
  "SETTINGS": {
    "TITLE": "Settings",
    "GENERAL": "General",
    "GENERAL_SETTINGS": "General Settings",
    "TOKENS": "Token",
    "TOKEN_SETTINGS": "Token Settings",
    "TOKENS_DESCRIPTION": "Set token lifetimes and enable refresh tokens.",
    "IDENTITY": "Identity",
    "IDENTITY_SETTINGS": "Identity Settings",
    "MONITORING": "Monitoring",
    "MONITORING_SETTINGS": "Monitoring Settings",
    "UPDATED": "Settings updated.",
    "ISSUER_URI": "Issuer URI",
    "REQUIRE_SSL": "Require SSL",
    "REQUIRE_USER_CONSENT": "Require User Consent",
    "IDENTITY_TOKEN_LIFETIME": "Identity Token Lifetime (in seconds)",
    "ACCESS_TOKEN_LIFETIME": "Access Token Lifetime (in seconds)",
    "AUTH_CODE_LIFETIME": "Auth Code Lifetime (in seconds)",
    "REFRESH_TOKEN_LIFETIME": "Refresh Token Lifetime (in seconds)",
    "ALLOW_REFRESH_TOKENS": "Allow Refresh Tokens?",
    "LOGGING_LEVEL": "Logging level",
    "PRIMARY_CERTIFICATE_STATUS": "Primary signing certificate",
    "SECONDARY_CERTIFICATE_STATUS": "Secondary signing certificate",
    "ADD_IDENTITY_PROVIDER": "Add identity provider",
    "NO_PROVIDERS": "No providers",
    "WS_FEDERATION": "WS Federation",
    "OPENID_CONNECT": "OpenID Connect",
    "SAML_2": "SAML 2.0",
    "LOCAL": "Local",
    "PROVIDER_NAME": "Provider Name",
    "NO_PROVIDER_SETTINGS": "No settings",
    "NO_PROVIDER_CLAIMS": "No claims",
    "PROVIDER_CLAIM_NAME": "Provider Claim",
    "DEFAULT_PROVIDER": "Default Provider",
    "PROVIDER_NOT_SET": "Not set",
    "LOG_LEVEL_NONE": "None",
    "LOG_LEVEL_MINIMAL": "Minimal",
    "LOG_LEVEL_VERBOSE": "Verbose",
    "CONTEXT": {
      "PRIMARY_CERTIFICATE_DESCRIPTION": "Used to encrypt access tokens",
      "SECONDARY_CERTIFICATE_DESCRIPTION": "Serves as a fallback for the primary certificate",
      "IDENTITY_PROVIDERS": "Identity Providers",
      "IDENTITY_PROVIDERS_DESCRIPTION": "Configure external providers from other identity management systems.",
      "LOGGING": "Logging",
      "LOGGING_DESCRIPTION": "Change how the Smart API Manager logs information.",
      "REQUIRE_SSL": "Smart API Manager will run only when SSL is enabled",
      "REQUIRE_USER_CONSENT": "Smart Clients must obtain consent from users when authenticating",
      "REFRESH_TOKENS": "Allow Smart Clients to obtain refresh tokens for offline access",
      "WS_FEDERATION": "WS-Federation based provider such as Integrated Windows Authentication, Azure AD, or CA SiteMinder",
      "OPENID_CONNECT": "OpenID Connect based provider such as Salesforce, Google, or Azure AD",
      "SAML_2": "SAML 2.0 based provider such as Azure AD",
      "LOCAL": "Local provider like Windows Credentials",
      "PROVIDER_NAME_HINT": "Provide a name for the provider"
    },
    "ERRORS": {
      "ISSUER_URI_REQUIRED": "You must provide an issuer URI.",
      "ISSUER_URI_INVALID": "You must provide a valid issuer URI.",
      "ISSUER_URI_INVALID_METADATA": "You must provide a valid issuer. The provided issuer has incorrect or missing metadata.",
      "INVALID_TOKEN_LIFETIME": "Invalid token lifetime.",
      "TOKEN_LIFETIME_REQUIRED": "A token lifetime is required.",
      "TOKEN_LIFETIME_PATTERN": "Token lifetimes can only contain natural numbers (i.e., whole, non-negative numbers).",
      "INVALID_LIFETIME": "Invalid lifetime.",
      "PROVIDER_NAME_REQUIRED": "You must provide a name for the provider."
    },
    "WIZARDS": {
      "ADD_IDENTITY_PROVIDER": "Add an Identity Provider",
      "EDIT_IDENTITY_PROVIDER": "Edit an Identity Provider",
      "ADD_IDENTITY_PROVIDER_SUCCESS": "{{name}} added to the available providers.",
      "ADD_IDENTITY_PROVIDER_ERROR": "A problem occurred creating the identity provider.",
      "EDIT_IDENTITY_PROVIDER_SUCCESS": "Updated settings and claims for {{name}}.",
      "EDIT_IDENTITY_PROVIDER_ERROR": "A problem occurred editing the identity provider.",
      "PROVIDER_NAME_CONTEXT": "",
      "PROVIDER_TYPE_CONTEXT": "Smart API Manager supports several types of external identity providers. Select a type below for the provider.",
      "PROVIDER_SETTINGS_CONTEXT": "Update the settings for your provider. We've added some settings based on the provider type, but the actual settings required may depend on your implementation.",
      "PROVIDER_CLAIMS_CONTEXT": "Update the claims for your provider. Claims can be mapped to access token claims by providing a target claim value found in tokens issued by the Smart API Manager.",
      "REMOVE_PROVIDER": "Users will no longer be able to authenticate using {{name}}.",
      "ENABLE_IDENTITY_PROVIDER": "Enable identity provider",
      "ENABLE_IDENTITY_PROVIDER_CONTEXT": "Allow users to authenticate using {{name}}?"
    },
    "DIAGNOSTICS": {
      "TITLE": "Diagnostics"
    },
    "SESSIONS": {
      "SUBJECT_ID": "User",
      "MACHINE_NAME": "User Host",
      "SCOPES": "Scopes",
      "SERVICE_NAME": "Service",
      "CLIENT_NAME": "Client",
      "GROUP_NAME": "Group",
      "CREATED_DATE": "Created",
      "EXPIRATION_DATE": "Expires"
    },
    "DOMAIN": {
      "LOGIN_SETTINGS_TITLE": "Login Page Settings",
      "LOGIN_SETTINGS_CONTEXT": "Use these settings to customize the login page for the local provider.",
      "COMPANY_NAME": "Description",
      "COMPANY_LOGO": "Logo",
      "COMPANY_LOGO_PREVIEW": "Preview",
      "COMPANY_LOGO_CHOOSE": "Choose an image",
      "COMPANY_LOGO_DND": "or drag an image file here.",
      "COMPANY_LOGO_SUPPORTED": ".jpg, .jpeg, and .png supported",
      "COMPANY_LOGO_MISSING": "No preview available."
    }
  },
  "DIAGNOSTICS": {
    "RUN_AGAIN": "Run Again",
    "NETWORK_PERFORMANCE_TITLE": "Network Performance",
    "NETWORK_PERFORMANCE_NOTE": "API responds as expected (less than 200 ms). Response time greater than 500 ms may indicate a network issue.",
    "NETWORK_PERFORMANCE_REQUEST": "Response took {{time}} ms",
    "NETWORK_PERFORMANCE_ISSUE_NETWORK": "Response is slower than expected.",
    "NETWORK_PERFORMANCE_RESOLUTION_NETWORK": "The API or network is not performing as expected.",
    "NETWORK_PERFORMANCE_ISSUE_API": "Response is slower than expected.",
    "NETWORK_PERFORMANCE_RESOLUTION_API": "The API or network is not performing as expected.",
    "IDP_TITLE": "External Identity Provider Access",
    "IDP_SUCCESS": "Successfully retrieved the metadata document for this identity provider. The provider should be operational.",
    "IDP_ISSUE_CORS": "Unable to retrieve the metadata document for this identity provider.",
    "IDP_RESOLUTION_CORS": "Cross-Origin-Resource-Sharing (CORS) configuration can cause this issue. If you are able to retrieve the metadata document via the link below, the identity provider is likely operational. However, if you receive an error, the identity provider configuration is likely invalid.",
    "IDP_ISSUE_NETWORK": "Successfully retrieved the metadata document for this identity provider, but the response indicates an error.",
    "IDP_RESOLUTION_NETWORK": "Please verify that the identity provider is operational.",
    "NOTE": "Note",
    "SYSTEM_CHECK": "System Check"
  },
  "ABOUT": {
    "ALL_RIGHTS_RESERVED": "All Rights Reserved",
    "THIRD_PARTY_COPYRIGHTS": "This product includes open source software which is subject to their respective software licenses, as identified in the following link:",
    "OSS_LICENSES_LINK": "Open Source Software Licenses",
    "TELERIK_NOTICE": "Portions of the user interface Copyright © 2015-2019 Progress Software Corporation and/or its subsidiaries or affiliates. All Rights Reserved.",
    "WARNING": "Warning: This computer program, including software, icons, graphical symbols, file formats, and audio-visual displays may be used only as permitted under the applicable software license agreement contains confidential and proprietary information of Intergraph and / or third parties which is protected by patent, trademark, copyright and / or trade secret law and may not be provided or otherwise made available without proper authorization.",
    "PIRACY_LINK": "Anti-piracy",
    "TECH_SUPPORT_LINK": "Tech Support"
  },
  "ERROR": {
    "GENERIC_ERROR": "A problem occurred.",
    "GENERIC_ERROR_CONTENT": "There was a problem. Please contact an administrator.",
    "ERROR_DETAIL": "Details",
    "INVALID_REQUEST_TITLE": "",
    "INVALID_REQUEST_CONTENT": "",
    "UNAUTHORIZED_CLIENT_TITLE": "Client is not authorized.",
    "UNAUTHORIZED_CLIENT_CONTENT": "The  Smart API Manager dashboard is not authorized to call the  Smart API Manager Management API. Please contact an administrator.",
    "ACCESS_DENIED_TITLE": "Not Authorized",
    "ACCESS_DENIED_CONTENT": "Your user doesn't have permission to access this application. Please contact your administrator for access.",
    "UNSUPPORTED_RESPONSE_TYPE_TITLE": "Authorization Server Error",
    "UNSUPPORTED_RESPONSE_TYPE_CONTENT": "The authorization server doesn't support the method utilized by  Smart API Manager for obtaining access. Please contact an administrator",
    "INVALID_SCOPE_TITLE": "Invalid Scope",
    "INVALID_SCOPE_CONTENT": "The client requested an invalid scope. Please contact an administrator.",
    "SERVER_ERROR_TITLE": "Server Error",
    "SERVER_ERROR_CONTENT": "There was an error with the authorization server. Please contact an administrator.",
    "TEMPORARILY_UNAVAILABLE_TITLE": "Temporarily Unavailable",
    "TEMPORARILY_UNAVAILABLE_CONTENT": "The authorization server is temporarily overloaded or down for maintenance. Please try your request again.",
    "INTERACTION_REQUIRED_TITLE": "",
    "INTERACTION_REQUIRED_CONTENT": "",
    "LOGIN_REQUIRED_TITLE": "",
    "LOGIN_REQUIRED_CONTENT": "",
    "SESSION_SELECTION_REQUIRED_TITLE": "",
    "SESSION_SELECTION_REQUIRED_CONTENT": "",
    "CONSENT_REQUIRED_TITLE": "",
    "CONSENT_REQUIRED_CONTENT": "",
    "INVALID_REQUEST_URI_TITLE": "",
    "INVALID_REQUEST_URI_CONTENT": "",
    "INVALID_REQUEST_OBJECT_TITLE": "",
    "INVALID_REQUEST_OBJECT_CONTENT": "",
    "REGISTRATION_NOT_SUPPORTED_TITLE": "",
    "REGISTRATION_NOT_SUPPORTED_CONTENT": "",
    "REQUEST_NOT_SUPPORTED_TITLE": "",
    "REQUEST_NOT_SUPPORTED_CONTENT": "",
    "REQUEST_URI_NOT_SUPPORTED_TITLE": "",
    "REQUEST_URI_NOT_SUPPORTED_CONTENT": "",
    "INVALID_RESOURCE_TITLE": "Oops. Something went wrong.",
    "INVALID_RESOURCE_CONTENT": "Something went wrong with the request. Please try again or contact an administrator.",
    "NOT_AUTHORIZED_TITLE": "Not Authorized",
    "NOT_AUTHORIZED_CONTENT": "You don't have permission to access this service. Please contact your administrator for access.",
    "FEDERATION_INVALID": "A problem occurred.",
    "FEDERATION_INVALID_CONTENT": "A problem occurred while signing in. Please contact an administrator to validate upstream identity provider settings."
  }
}